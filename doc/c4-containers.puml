@startuml


!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons

!include DEVICONS/python.puml
!include DEVICONS/redis.puml

sprite clickhouse <svg style="color: white" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M21.333 10H24v4h-2.667ZM16 1.335h2.667v21.33H16Zm-5.333 0h2.666v21.33h-2.666ZM0 22.665V1.335h2.667v21.33zm5.333-21.33H8v21.33H5.333Z" fill="white"></path></svg>

sprite rabbitmq <svg style="color:#fff" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
<path d="M23.035 9.601h-7.677a.956.956 0 0 1-.962-.962V.962a.956.956 0 0 0-.962-.956H10.56a.956.956 0 0 0-.962.956V8.64a.956.956 0 0 1-.962.962H5.762a.956.956 0 0 1-.961-.962V.962A.956.956 0 0 0 3.839 0H.959a.956.956 0 0 0-.956.962v22.076A.956.956 0 0 0 .965 24h22.07a.956.956 0 0 0 .962-.962V10.58a.956.956 0 0 0-.962-.98zm-3.86 8.152a1.437 1.437 0 0 1-1.437 1.443h-1.924a1.437 1.437 0 0 1-1.436-1.443v-1.917a1.437 1.437 0 0 1 1.436-1.443h1.924a1.437 1.437 0 0 1 1.437 1.443z" fill="#fff"/></svg>

title Social Network Architecture

Person(user, "User", "Social network user")

Person_Ext(admin, "Administrator", "Social network administrator/moderator")

System_Boundary(socialNetwork, "Social network") {

    Container_Ext(webappp, "Web application", "html+js+css")
    Container_Ext(mobileApp, "Mobile application", "whatever")
    Container_Ext(adminApp, "Moderator web application", "html+js+css")

    Container(mainService, "Main service", "python", "Provides REST API. Performs registration and login operations. Redirects other requests", $sprite="python")
    ContainerDb(authDB, "auth DB", "redis", "Stores auth info", $sprite="redis")
    Rel(mainService, authDB, "Reads from and writes to")


    Container(postsService, "Posts service", "python", "Handles posts and comments", $sprite="python")
    ContainerDb(postsDB, "Posts DB", "redis", "Stores posts and comments", $sprite="redis")
    Rel(postsService, postsDB, "Reads from and writes to")


    Container(broker, "broker", "RabbitMQ", $sprite="rabbitmq")
    Container(statisticsService, "Statistics service", "python", "Computes statistics", $sprite="python")
    ContainerDb(statisticsDB, "Likes and views DB", "clickhouse", "Stores likes and views in column-oriented format for fast statistics queries", $sprite="clickhouse")
    Rel(broker, statisticsService, "Delivers likes and views events")
    Rel(statisticsService, statisticsDB, "Reads from and writes to")


    Rel(user, webappp, "Uses through browser")
    Rel(user, mobileApp, "Uses through mobile phone")
    Rel(admin, adminApp, "Uses through browser")

    Rel(webappp, mainService, "Makes API calls to", "JSON, HTTPS")
    Rel(mobileApp, mainService, "Makes API calls to", "JSON, HTTPS")
    Rel(adminApp, mainService, "Makes API calls to", "JSON, HTTPS")

    Rel(mainService, postsService, "Redirects posts requests", "grpc")
    Rel(postsService, statisticsService, "Gets likes and views for given post", "grpc")
    Rel(mainService, statisticsService, "Redirects statistics requests", "grpc")
    Rel(mainService, broker, "Notifies of likes and views events")

}

SHOW_LEGEND()

@enduml
